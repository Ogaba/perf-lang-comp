Compute result of CPU time consumed by different programming languages

Version de tclsh :8.6
COMMAND=taskset -c 1 tclsh hamming_numbers.tclsh
USER=16.57
SYS=0.15
REAL=0:16.85
MEMT=0
COMMAND=taskset -c 2 tclsh hamming_numbers.tclsh
USER=14.43
SYS=0.15
REAL=0:14.69
MEMT=0
COMMAND=taskset -c 3 tclsh hamming_numbers.tclsh
USER=11.61
SYS=0.16
REAL=0:11.80
MEMT=0
COMMAND=taskset -c 0 tclsh hamming_numbers.tclsh
USER=10.78
SYS=0.16
REAL=0:10.96
MEMT=0
COMMAND=taskset -c 1 tclsh hamming_numbers.tclsh
USER=15.54
SYS=0.19
REAL=0:15.84
MEMT=0
COMMAND=taskset -c 2 tclsh hamming_numbers.tclsh
USER=14.90
SYS=0.19
REAL=0:15.23
MEMT=0
COMMAND=taskset -c 3 tclsh hamming_numbers.tclsh
USER=14.55
SYS=0.17
REAL=0:14.78
MEMT=0
COMMAND=taskset -c 0 tclsh hamming_numbers.tclsh
USER=13.77
SYS=0.18
REAL=0:14.02
MEMT=0
tclsh : hachage de la sortie pour vérifier que les données en sortie sont les mêmes :
HASH=40f87d4802f51a29a086efe42723f9a4a89691e05c8b99a272a3cad48102bf03
NB_LIGNES=22
bash_functions.sh: line 136: 26488 Segmentation fault      valgrind --log-file=grindout ./a.out > /dev/null
tclsh : consommation mémoire :
BYTES_IN_USE_AT_EXIT=BYTES_TOTAL_HEAP_USAGE=