Compute result of CPU time consumed by different programming languages

Version de python :Python 2.7.9
taskset -c 1 python hamming_numbers.python
USER=2.83
SYS=0.02
REAL=0:02.93
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.84
SYS=0.00
REAL=0:02.85
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.82
SYS=0.02
REAL=0:02.84
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.83
SYS=0.01
REAL=0:02.84
MEMT=0
taskset -c 1 python hamming_numbers.python
USER=2.86
SYS=0.00
REAL=0:02.87
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.83
SYS=0.01
REAL=0:02.85
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.86
SYS=0.01
REAL=0:02.87
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.89
SYS=0.00
REAL=0:02.90
MEMT=0
taskset -c 1 python hamming_numbers.python
USER=2.87
SYS=0.01
REAL=0:02.89
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.89
SYS=0.01
REAL=0:02.90
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.79
SYS=0.02
REAL=0:02.81
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.79
SYS=0.02
REAL=0:02.81
MEMT=0
taskset -c 1 python hamming_numbers.python
USER=2.89
SYS=0.00
REAL=0:02.90
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.83
SYS=0.01
REAL=0:02.86
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.85
SYS=0.00
REAL=0:02.85
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.82
SYS=0.02
REAL=0:02.84
MEMT=0
taskset -c 1 python hamming_numbers.python
USER=2.87
SYS=0.00
REAL=0:02.87
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.82
SYS=0.02
REAL=0:02.85
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.90
SYS=0.00
REAL=0:02.91
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.87
SYS=0.02
REAL=0:02.89
MEMT=0
taskset -c 1 python hamming_numbers.python
USER=2.81
SYS=0.00
REAL=0:02.82
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.81
SYS=0.00
REAL=0:02.81
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.81
SYS=0.01
REAL=0:02.83
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.90
SYS=0.00
REAL=0:02.91
MEMT=0
taskset -c 1 python hamming_numbers.python
USER=2.83
SYS=0.02
REAL=0:02.85
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.84
SYS=0.00
REAL=0:02.84
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.89
SYS=0.01
REAL=0:02.90
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.79
SYS=0.02
REAL=0:02.82
MEMT=0
taskset -c 1 python hamming_numbers.python
USER=2.83
SYS=0.00
REAL=0:02.84
MEMT=0
taskset -c 2 python hamming_numbers.python
USER=2.82
SYS=0.00
REAL=0:02.82
MEMT=0
taskset -c 3 python hamming_numbers.python
USER=2.84
SYS=0.01
REAL=0:02.85
MEMT=0
taskset -c 0 python hamming_numbers.python
USER=2.82
SYS=0.00
REAL=0:02.83
MEMT=0
python : hachage de la sortie pour vérifier que les données en sortie sont les memes :
HASH=40f87d4802f51a29a086efe42723f9a4a89691e05c8b99a272a3cad48102bf03
python : nombre de lignes passées par la regexp :
NB_LIGNES=22
python : consommation mémoire :
BYTES_IN_USE_AT_EXIT=535
BYTES_TOTAL_HEAP_USAGE=543
